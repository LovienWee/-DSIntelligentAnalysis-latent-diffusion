model:
  base_learning_rate: 4.5e-6
  target: ldm.models.autoencoder.AutoencoderKL
  params:
    embed_dim: 4
    monitor: val/rec_loss
    ddconfig:
      double_z: true
      z_channels: 4
      resolution: 128
      in_channels: 4        # <== 和 ocean.py 的通道一致
      out_ch: 4
      ch: 128
      ch_mult: [1,2,4,4]    # 128 -> 16（下采样8倍）
      num_res_blocks: 2
      attn_resolutions: []
      dropout: 0.0
    lossconfig:
      target: ldm.modules.losses.LPIPSWithDiscriminator
      params:
        disc_start: 50001
        disc_weight: 0.5
        disc_in_channels: 4
        perceptual_weight: 0.0

data:
  target: ldm.data.base.DataModuleFromConfig
  params:
    batch_size: 16
    num_workers: 8
    train:
      target: ldm.data.ocean.make_dataloader
      params:
        nc_paths:
          - oceandata/IndianOcean/indianOcean.nc
          - oceandata/SouthChinaSea/southChinaSea.nc
        split_json: oceandata/Split/SouthChinaSea_split_seq.json
        split_key: train
        crop_size: [128, 128]
        random_flip: true
        batch_size: 16
        num_workers: 8
    validation:
      target: ldm.data.ocean.make_dataloader
      params:
        nc_paths:
          - oceandata/IndianOcean/indianOcean.nc
          - oceandata/SouthChinaSea/southChinaSea.nc
        split_json: oceandata/Split/SouthChinaSea_split_seq.json
        split_key: val
        crop_size: [128, 128]
        random_flip: false
        batch_size: 16
        num_workers: 8

lightning:
  trainer:
    benchmark: true
    max_epochs: 100
    precision: 16
    devices: 1
    accelerator: gpu
  callbacks:
    - target: pytorch_lightning.callbacks.ModelCheckpoint
      params:
        filename: "ocean_kl-{epoch:02d}-{val/rec_loss:.4f}"
        save_top_k: 3
        monitor: "val/rec_loss"
        mode: "min"
